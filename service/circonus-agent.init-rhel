#!/bin/bash
#
# circonus-agentd        Startup script for Circonus Agent Daemon
#
# chkconfig: - 98 02
# description: Circonus Agent Daemon
# processname: circonus-agentd
#
### BEGIN INIT INFO
# Provides:          circonus-agentd
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Circonus Agent Daemon
# Description:       The daemon provides a simple mechanism to expose
#                    system and application metrics externally.
#                    It inventories all executable programs in its plugins directory
#                    and executes them upon external request, returning results
#                    in JSON format.
### END INIT INFO

source /etc/rc.d/init.d/functions

prog="Circonus Agent Daemon"
agent="circonus-agentd"
agent_cmd="@@SBIN@@/${agent}"
pid_file="/var/run/${agent}.pid"

start_agent() {
    $agent_cmd 2>&1 >/dev/null &
    pid=$!
    RETVAL=$?
    if [[ $RETVAL -eq 0 ]]; then
        echo $pid > $pid_file
        success
    else
        failure
    fi
    return $RETVAL
}

start() {
    echo -n $"Starting $prog: "
    RETVAL=3
    [[ -f $pid_file ]] && { __pids_var_run $agent $pid_file; RETVAL=$?; }
    if [[ "$RETVAL" == "3" ]]; then
        # Not running, so start
        start_agent
        RETVAL=$?
    elif [[ "$RETVAL" == "1" ]]; then
        # Stale pidfile
        rm $pid_file
        start_agent
        RETVAL=$?
    else
        # Already running
        success
        RETVAL=0
    fi
    echo
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pid_file
    RETVAL=$?
    echo
    return $RETVAL
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $pid_file $agent
        RETVAL=$?
        ;;
    reload|force-reload)
        stop
        start
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|reload|force-reload|status|restart}"
        RETVAL=2
esac

exit $RETVAL
